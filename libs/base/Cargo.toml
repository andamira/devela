# devela_base manifest
# ==============================================================================
#
## Table of Contents
#
# * [package]
#   - [metadata.*]
#
# * [features]
#   - Safety            (safe,unsafe,safest)
#   - Capability
#   - Dependency
#
# * [dependencies]
# * [badges]
# * [lints]

[package]
name = "devela_base"
description = "base shared functionality for devela"
rust-version.workspace = true
edition.workspace = true
version.workspace = true
documentation.workspace = true
authors.workspace = true
license.workspace = true
repository = "https://github.com/andamira/devela/tree/main/libs/base"
include = [
	# configuration:
	"/Cargo.toml", "/config/*",
	# source code & documentation:
	"/build/**/*.rs", "/build/**/*.md",
	"/src/**/*.rs", "/src/**/*.md",
	"/LICENSE*",
]
categories = ["rust-patterns", "development-tools"]
keywords = ["dev", "extension"]
# build = "build/mod.rs"
autoexamples = false
publish = true

[package.metadata.docs.rs]
no-default-features = true
features = ["_docsrs"]


[features]
# ==============================================================================


#* Safety features *#
# ------------------------------------------------------------------------------
unsafe = [] # enables unsafe features in this crate (unused)
safe = [] # forbids `unsafe` in this crate


#* Capability features *#
# ------------------------------------------------------------------------------
# default = []

#* docs capabilities *#
_docsrs = ["unsafe"] # complete documentation


#* Dependency features *#
# ------------------------------------------------------------------------------


[dependencies] # 1 (1 required, 0 optional)
# ==============================================================================

[dependencies.devela_base_macros]
workspace = true

[dependencies.paste_crate] # https://crates.io/crates/paste
version = "1.0.15" # âœ— https://github.com/dtolnay/paste/commits/master/
package = "paste" # safe, ARCHIVED
# alternative: https://crates.io/crates/pastey


[badges]
maintenance.status = "experimental"


[lints]
workspace = true
