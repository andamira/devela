[package]
name = "devela_macros"
description = "procedural macros for devela"
version = "0.10.0"
edition = "2021"
rust-version = "1.72.1" # sync with readme, check.sh & .github/workflows/check.yml
authors = ["Jos√© Luis Cruz <joseluis@andamira.net>"]
repository = "https://github.com/andamira/devela_macros"
documentation = "https://docs.rs/devela_macros"
license = "MIT OR Apache-2.0"
include = [
	"/src/**/*.rs",
	"/src/**/*.md",
	"/examples/*.rs",
	"/Cargo.toml",
	"/README.md",
	"/LICENSE-*",
]
categories = ["rust-patterns", "development-tools::procedural-macro-helpers"]
keywords = ["dev", "helper", "helpers", "extension", "code-generation"]
publish = true

[lib]
proc-macro = true


# ------------------------------------------------------------------------------

[features]
# ==============================================================================

#* Miscellaneous features *#
# ------------------------------------------------------------------------------

default = ["std", "safe"]

__lints = [] # enables extra lints (enabled on cl* aliases)


#* Environment features *#
# ------------------------------------------------------------------------------

std = ["alloc"]
alloc = []


#* Safety features *#
# ------------------------------------------------------------------------------

unsafe = [] # enables unsafe features in this crate (unused)
safe = [] # forbids `unsafe` in this crate


#* Nightly features tree *#
# ------------------------------------------------------------------------------

nightly = ["nightly_doc"]
	nightly_doc = [] # doc_cfg


#* Capability features *#
# ------------------------------------------------------------------------------

# The most complete version of the documentation:
_docsrs = ["nightly", "std", "unsafe"]

[package.metadata.docs.rs]
# ==============================================================================
no-default-features = true
features = ["_docsrs"]


[badges]
# ==============================================================================
maintenance = { status = "experimental" }
