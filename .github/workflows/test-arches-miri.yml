permissions:
  contents: read

# runs on push to the main branch, and PRs
on:
  push:
    branches: [main]
  pull_request:

name: "test arches miri"
jobs:

  # 1.
  required:
    name: "ubuntu / ${{ matrix.toolchain }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable]
        # toolchain: [stable, beta]
    steps:
      - name: "checkout"
        uses: actions/checkout@v4
        with:
            submodules: true

      - name: "Install ${{ matrix.toolchain }}"
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: "Install libraries via APT"
        run: |
          sudo apt update
          # for alsa-sys, gilrs:
          sudo apt install -y libasound2-dev libudev-dev
          # for ffmpeg:
          sudo apt install -y clang pkg-config libavcodec-dev libavdevice-dev \
            libavfilter-dev libavformat-dev libavutil-dev
          # for fltk:
          sudo apt install -y libpango1.0-dev libxft-dev # libxext-dev libxft-dev \
            # libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpng-dev \
            # libgl1-mesa-dev libglu1-mesa-dev
          # for sdl2:
          sudo apt install -y libsdl2-dev libsdl2-gfx-dev libsdl2-image-dev \
            libsdl2-mixer-dev libsdl2-ttf-dev

      - name: "cargo generate-lockfile"
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile

      - name: "install rust-script"
        run: cargo install rust-script;

      # https://twitter.com/jonhoo/status/1571290371124260865

      - name: "./utils/check.rs --arches"
        run: ./utils/check.rs --arches

      - name: "./utils/check.rs --miri"
        run: ./utils/check.rs --miri
