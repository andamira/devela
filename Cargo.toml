[workspace]
members = [".", "macros"]

[package]
name = "devela"
description = "rust development helper & extension utilities"
version = "0.13.0"
edition = "2021"
rust-version = "1.72.1" # sync with readme, tools/check* & .github/*/check.yml
authors = ["JosÃ© Luis Cruz <joseluis@andamira.net>"]
repository = "https://github.com/andamira/devela"
documentation = "https://docs.rs/devela"
license = "MIT OR Apache-2.0"
include = [
	"/Cargo.toml",
	"/src/**/*.rs", "/src/**/*.md",
	"/README.md", "/DERIVED.md", "/LICENSE-*",
]
categories = ["development-tools", "rust-patterns", "no-std::no-alloc"]
keywords = ["dev", "helper", "helpers", "extension", "extensions"]
publish = true

# ------------------------------------------------------------------------------

[features]
default = []

#* environment features *#
std = [ # disables `no_std` compatibility and enables `std` functionality
	"alloc",
	"atomic/std",
	"bytemuck/extern_crate_std"]
alloc = [ # enables `alloc` functionality
	"bytemuck/extern_crate_alloc"]
no_std = [] # enables functionality incompatible with `std` (unused)

#* platform specific features *#
linux = ["os"] # enables os::linux functionality
linux_unsafe = ["linux", "unsafe_linux"]
# windows = []
# macos = []
# esp32 = []
# wasm = []

#* modules features *#
fullest = ["full"] # enables `full` recursively (unused)
full = [ # enables all the modules.
	"texts",
	"cmp", "convert", "mem", "num", "os"]
	full_unsafe = ["full", "unsafe"]
lean = [ # enables a lean selection of modules
	"ascii", "fmt", "str"]
	lean_unsafe = ["lean", "unsafe"]
leanest = ["lean"] # enables `lean` recursively (unused)

# multiple related modules:
chars = [ # enables all *char* related sub-modules
	"ascii", "char"]
	chars_unsafe = ["ascii_unsafe", "char_unsafe"]
strings = [ # enables all *string* related sub-modules
	"str", "string"]
	strings_unsafe = ["str_unsafe", "string_unsafe"]
texts = [ # enables all *text* related sub-modules
	"chars", "strings", "fmt"]
	texts_unsafe = ["chars_unsafe", "strings_unsafe", "fmt_unsafe"]

# single modules:
ascii = []
char = []
cmp = []
convert = []
fmt = []
mem = []
num = []
os = []
str = []
string = []
# single modules with unsafe support:
ascii_unsafe = ["ascii", "unsafe_ascii"]
char_unsafe = ["char", "unsafe_char"]
cmp_unsafe = ["cmp", "unsafe_cmp"]
convert_unsafe = ["convert", "unsafe_convert"]
fmt_unsafe = ["fmt", "unsafe_fmt"]
mem_unsafe = ["mem", "unsafe_mem"]
num_unsafe = ["num", "unsafe_num"]
os_unsafe = ["os", "unsafe_os"]
str_unsafe = ["str", "unsafe_str"]
string_unsafe = ["string", "unsafe_string"]


#* safety features *#
unsafest = ["unsafe"] # enables `unsafe` recursively (unused)
unsafe = [ # enables unsafe features in this crate
	"unsafe_ascii", "unsafe_char", "unsafe_cmp", "unsafe_convert", "unsafe_fmt",
	"unsafe_mem", "unsafe_num", "unsafe_os", "unsafe_str", "unsafe_string"]
	unsafe_ascii = [] # enables unchecked conversions in `ascii`
	unsafe_char = [] # enables unchecked conversions in `char`
	unsafe_cmp = [] # enables const floating-point comparisons
	unsafe_convert = [] # enables using `MaybeUninit` for array initalization
	unsafe_fmt = [] # enables `IntBuf` struct and `IntBufable` trait
	unsafe_mem = [] # enables `as_bytes*` functions and bytemuck's traits
	unsafe_num = [] # enables unsafe constructors and bytemuck's traits
	unsafe_os = [ # enables unsafe OS functionality
		"unsafe_linux"]
		unsafe_linux = [] # enables linux syscalls
	unsafe_str = [] # enables unsafe use in `str`
	unsafe_string = [] # enables unsafe use in `string`
safe = [] # forbids unsafe in this crate
safest = ["safe"] # forbids `unsafe` recursively (unused)


#* nightly features *#
nightly = [] # enables nightly features
nightly_docs = [ # enables features for docs.rs
	"nightly", "full", "std", "unsafe", "linux",
]


# ------------------------------------------------------------------------------

[dependencies]
devela_macros = "0.6.1"
#
paste_crate = { package = "paste", version = "1.0.14", default-features = false }
az = { version = "1.2.1", default-features = false }
bytemuck = { version = "1.13.1", default-features = false }
const-str = { version = "0.5.6", default-features = false }
#
[dependencies.atomic]
version = "0.6.0"
default-features = false
features = ["fallback"]
[dependencies.portable-atomic]
version = "1.4.3"
default-features = false
features = ["fallback", "float"]


# ------------------------------------------------------------------------------

[package.metadata.docs.rs]
no-default-features = true
features = ["nightly_docs"]

[badges]
maintenance = { status = "experimental" }
